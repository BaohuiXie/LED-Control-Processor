/*
###############################################################
#  Generated by:      Cadence Innovus 20.10-p004_1
#  OS:                Linux x86_64(Host ID EEX055)
#  Generated on:      Wed May  4 04:23:09 2022
#  Design:            LEDControl
#  Command:           saveNetlist results/LEDControl.routed.v
###############################################################
*/
/////////////////////////////////////////////////////////////
// Created by: Synopsys DC Expert(TM) in wire load mode
// Version   : P-2019.03-SP5
// Date      : Wed May  4 04:09:23 2022
/////////////////////////////////////////////////////////////
module Counter12Bit_DW01_inc_0 (
	A, 
	SUM);
   input [11:0] A;
   output [11:0] SUM;

   // Internal wires
   wire [11:2] carry;

   ADDHX1 U1_1_10 (.S(SUM[10]),
	.CO(carry[11]),
	.B(carry[10]),
	.A(A[10]));
   ADDHX1 U1_1_9 (.S(SUM[9]),
	.CO(carry[10]),
	.B(carry[9]),
	.A(A[9]));
   ADDHX1 U1_1_8 (.S(SUM[8]),
	.CO(carry[9]),
	.B(carry[8]),
	.A(A[8]));
   ADDHX1 U1_1_7 (.S(SUM[7]),
	.CO(carry[8]),
	.B(carry[7]),
	.A(A[7]));
   ADDHX1 U1_1_6 (.S(SUM[6]),
	.CO(carry[7]),
	.B(carry[6]),
	.A(A[6]));
   ADDHX1 U1_1_5 (.S(SUM[5]),
	.CO(carry[6]),
	.B(carry[5]),
	.A(A[5]));
   ADDHX1 U1_1_4 (.S(SUM[4]),
	.CO(carry[5]),
	.B(carry[4]),
	.A(A[4]));
   ADDHX1 U1_1_3 (.S(SUM[3]),
	.CO(carry[4]),
	.B(carry[3]),
	.A(A[3]));
   ADDHX1 U1_1_2 (.S(SUM[2]),
	.CO(carry[3]),
	.B(carry[2]),
	.A(A[2]));
   ADDHX1 U1_1_1 (.S(SUM[1]),
	.CO(carry[2]),
	.B(A[0]),
	.A(A[1]));
   XOR2X1 U1 (.Y(SUM[11]),
	.B(A[11]),
	.A(carry[11]));
   INVX1 U2 (.Y(SUM[0]),
	.A(A[0]));
endmodule

module Counter12Bit (
	result, 
	clk, 
	globalReset);
   output [11:0] result;
   input clk;
   input globalReset;

   // Internal wires
   wire RST;
   wire N3;
   wire N4;
   wire N5;
   wire N6;
   wire N7;
   wire N8;
   wire N9;
   wire N10;
   wire N11;
   wire N12;
   wire N13;
   wire N14;
   wire N17;
   wire n16;
   wire n17;
   wire n18;
   wire n19;
   wire n20;
   wire n13;
   wire n15;

   DFFSRX1 result_reg_0_ (.SN(1'b1),
	.RN(n13),
	.Q(result[0]),
	.D(N3),
	.CK(clk));
   DFFSRX1 result_reg_11_ (.SN(1'b1),
	.RN(n13),
	.Q(result[11]),
	.D(N14),
	.CK(clk));
   DFFSRX1 RST_reg (.SN(n13),
	.RN(1'b1),
	.Q(RST),
	.D(n20),
	.CK(clk));
   DFFSRX1 result_reg_10_ (.SN(1'b1),
	.RN(n13),
	.Q(result[10]),
	.D(N13),
	.CK(clk));
   DFFSRX1 result_reg_9_ (.SN(1'b1),
	.RN(n13),
	.Q(result[9]),
	.D(N12),
	.CK(clk));
   DFFSRX1 result_reg_8_ (.SN(1'b1),
	.RN(n13),
	.Q(result[8]),
	.D(N11),
	.CK(clk));
   DFFSRX1 result_reg_7_ (.SN(1'b1),
	.RN(n13),
	.Q(result[7]),
	.D(N10),
	.CK(clk));
   DFFSRX1 result_reg_6_ (.SN(1'b1),
	.RN(n13),
	.Q(result[6]),
	.D(N9),
	.CK(clk));
   DFFSRX1 result_reg_5_ (.SN(1'b1),
	.RN(n13),
	.Q(result[5]),
	.D(N8),
	.CK(clk));
   DFFSRX1 result_reg_4_ (.SN(1'b1),
	.RN(n13),
	.Q(result[4]),
	.D(N7),
	.CK(clk));
   DFFSRX1 result_reg_3_ (.SN(1'b1),
	.RN(n13),
	.Q(result[3]),
	.D(N6),
	.CK(clk));
   DFFSRX1 result_reg_2_ (.SN(1'b1),
	.RN(n13),
	.Q(result[2]),
	.D(N5),
	.CK(clk));
   DFFSRX1 result_reg_1_ (.SN(1'b1),
	.RN(n13),
	.Q(result[1]),
	.D(N4),
	.CK(clk));
   NAND2X2 U17 (.Y(n17),
	.B(result[8]),
	.A(result[9]));
   OR4X1 U19 (.Y(n20),
	.D(n19),
	.C(n18),
	.B(n17),
	.A(n16));
   NAND3X1 U20 (.Y(n19),
	.C(result[4]),
	.B(result[2]),
	.A(result[3]));
   NAND3X1 U21 (.Y(n18),
	.C(result[1]),
	.B(result[10]),
	.A(result[11]));
   NAND3X1 U22 (.Y(n16),
	.C(result[7]),
	.B(result[5]),
	.A(result[6]));
   OR2X1 U23 (.Y(N17),
	.B(globalReset),
	.A(n15));
   Counter12Bit_DW01_inc_0 add_95 (.A(result),
	.SUM({ N14,
		N13,
		N12,
		N11,
		N10,
		N9,
		N8,
		N7,
		N6,
		N5,
		N4,
		N3 }));
   INVX1 U15 (.Y(n13),
	.A(N17));
   INVX1 U18 (.Y(n15),
	.A(RST));
endmodule

module Comparator12Bit (
	Vout, 
	A, 
	B);
   output Vout;
   input [11:0] A;
   input [11:0] B;

   // Internal wires
   wire n15;
   wire n16;
   wire n17;
   wire n18;
   wire n19;
   wire n20;
   wire n21;
   wire n22;
   wire n23;
   wire n24;
   wire n25;
   wire n26;
   wire n27;
   wire n28;
   wire n29;
   wire n30;
   wire n31;
   wire n32;
   wire n33;
   wire n34;
   wire n35;
   wire n36;
   wire n37;
   wire n38;
   wire n1;
   wire n2;
   wire n3;
   wire n4;
   wire n5;
   wire n6;
   wire n7;
   wire n8;
   wire n9;
   wire n10;
   wire n11;
   wire n12;
   wire n13;
   wire n14;

   AOI21X1 U18 (.Y(n15),
	.B0(n17),
	.A1(B[11]),
	.A0(n16));
   NOR2X1 U19 (.Y(n17),
	.B(n18),
	.A(n16));
   AOI22X1 U20 (.Y(n18),
	.B1(n2),
	.B0(n1),
	.A1(B[10]),
	.A0(n19));
   AOI22X1 U21 (.Y(n20),
	.B1(n22),
	.B0(B[9]),
	.A1(n21),
	.A0(n3));
   OAI22X1 U22 (.Y(n21),
	.B1(n4),
	.B0(n24),
	.A1(n11),
	.A0(n23));
   AOI22X1 U23 (.Y(n24),
	.B1(n26),
	.B0(B[7]),
	.A1(n25),
	.A0(n5));
   OAI22X1 U24 (.Y(n25),
	.B1(n6),
	.B0(n28),
	.A1(n12),
	.A0(n27));
   AOI22X1 U25 (.Y(n28),
	.B1(n30),
	.B0(B[5]),
	.A1(n29),
	.A0(n7));
   OAI22X1 U26 (.Y(n29),
	.B1(n8),
	.B0(n32),
	.A1(n13),
	.A0(n31));
   AOI22X1 U27 (.Y(n32),
	.B1(n34),
	.B0(B[3]),
	.A1(n33),
	.A0(n9));
   OAI22X1 U28 (.Y(n33),
	.B1(n10),
	.B0(n36),
	.A1(n14),
	.A0(n35));
   AOI22X1 U29 (.Y(n36),
	.B1(n38),
	.B0(B[1]),
	.A1(B[0]),
	.A0(n37));
   NOR2X1 U30 (.Y(n37),
	.B(n38),
	.A(A[0]));
   XOR2X1 U31 (.Y(n38),
	.B(A[1]),
	.A(B[1]));
   XOR2X1 U32 (.Y(n35),
	.B(A[2]),
	.A(n14));
   XOR2X1 U33 (.Y(n34),
	.B(A[3]),
	.A(B[3]));
   XOR2X1 U34 (.Y(n31),
	.B(A[4]),
	.A(n13));
   XOR2X1 U35 (.Y(n30),
	.B(A[5]),
	.A(B[5]));
   XOR2X1 U36 (.Y(n27),
	.B(A[6]),
	.A(n12));
   XOR2X1 U37 (.Y(n26),
	.B(A[7]),
	.A(B[7]));
   XOR2X1 U38 (.Y(n23),
	.B(A[8]),
	.A(n11));
   XOR2X1 U39 (.Y(n22),
	.B(A[9]),
	.A(B[9]));
   XOR2X1 U40 (.Y(n19),
	.B(A[10]),
	.A(B[10]));
   XOR2X1 U41 (.Y(n16),
	.B(A[11]),
	.A(B[11]));
   INVX8 U3 (.Y(Vout),
	.A(n15));
   INVX1 U4 (.Y(n1),
	.A(n20));
   INVX1 U5 (.Y(n2),
	.A(n19));
   INVX1 U6 (.Y(n3),
	.A(n22));
   INVX1 U7 (.Y(n4),
	.A(n23));
   INVX1 U8 (.Y(n5),
	.A(n26));
   INVX1 U9 (.Y(n6),
	.A(n27));
   INVX1 U10 (.Y(n7),
	.A(n30));
   INVX1 U11 (.Y(n8),
	.A(n31));
   INVX1 U12 (.Y(n9),
	.A(n34));
   INVX1 U13 (.Y(n10),
	.A(n35));
   INVX1 U14 (.Y(n11),
	.A(B[8]));
   INVX1 U15 (.Y(n12),
	.A(B[6]));
   INVX1 U16 (.Y(n13),
	.A(B[4]));
   INVX1 U17 (.Y(n14),
	.A(B[2]));
endmodule

module LEDControl (
	oscillator, 
	LEDFrameData, 
	globalReset, 
	power);
   input oscillator;
   input [11:0] LEDFrameData;
   input globalReset;
   output power;

   // Internal wires
   wire [11:0] counterResult;

   Counter12Bit count (.result(counterResult),
	.clk(oscillator),
	.globalReset(globalReset));
   Comparator12Bit comp (.Vout(power),
	.A(counterResult),
	.B(LEDFrameData));
endmodule

